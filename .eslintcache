[{"C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\index.js":"1","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\App.js":"2","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\reportWebVitals.js":"3","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\RegistrationPage\\register.jsx":"4","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\LoginPage\\login.jsx":"5","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Services\\userService.js":"6","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\Forgot-Password\\forgotPassword.jsx":"7"},{"size":504,"mtime":1611026083703,"results":"8","hashOfConfig":"9"},{"size":635,"mtime":1611498843265,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":10654,"mtime":1611498832059,"results":"12","hashOfConfig":"9"},{"size":6183,"mtime":1611498839144,"results":"13","hashOfConfig":"9"},{"size":750,"mtime":1611384874973,"results":"14","hashOfConfig":"9"},{"size":4941,"mtime":1611541784678,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"jw120l",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\index.js",[],["34","35"],"C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\App.js",[],"C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\reportWebVitals.js",[],"C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\RegistrationPage\\register.jsx",["36","37"],"import React  from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport logo from '../../Images/account.svg';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import ReactDOM, { render } from 'react-dom';\r\nimport '../RegistrationPage/register.css'\r\nimport { registration } from \"../../Services/userService\"\r\n// import { FormHelperText, Grid } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(5),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default class RegisterForm extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      Rpassword: \"\",\r\n      errorValid: {\r\n        firstName: false,\r\n        lastName: false,\r\n        email: false,\r\n        password: false,\r\n        Rpassword: false,\r\n        showPassword : false,\r\n      }, \r\n      enable: true,\r\n          service: \"advance\",\r\n      errors: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        Rpassword: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  handleFirstNameInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      firstName: event.target.value,\r\n    });\r\n    let errors = this.state.errors;\r\n    let validate = false;\r\n    const regexvalidatefirstName = new RegExp(/^[A-Z]{1}[a-z]{3,}$/);\r\n    if (!regexvalidatefirstName.test(this.state.firstName)) {\r\n      errors.firstName = \"First Name is incorrect\";\r\n      validate = true;\r\n    } else {\r\n      errors.firstName = \"\";\r\n    }\r\n    this.setState({\r\n      errorValid: { firstName: validate },\r\n      errors: { firstName: errors.firstName },\r\n    });\r\n  };\r\n  \r\n  handleLastNameInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      lastName: event.target.value,\r\n    });\r\n    let errors = this.state.errors;\r\n    let validate = false;\r\n    \r\n    const regexvalidatelastName = new RegExp(/^[A-Z]{1}[a-z]{3,}$/);\r\n    if (!regexvalidatelastName.test(event.target.value)) {\r\n      errors.lastName = \"Last Name is incorrect\";\r\n      validate = true;\r\n    } else {\r\n      errors.lastName = \"\";\r\n    }\r\n    this.setState({\r\n      errorValid: { lastName: validate },\r\n      errors: { lastName: errors.lastName },\r\n    });\r\n  };\r\n\r\n   \r\n\r\n  handleEmailInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n    let errors = this.state.errors;\r\n    let validate = false;\r\n    const regexValidateEmail = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$$/);\r\n    if (!regexValidateEmail.test(event.target.value)) {\r\n      errors.email = \"Email is not according to the syntx\";\r\n      validate = true;\r\n    } else {\r\n      errors.email = \"\";\r\n    }\r\n    this.setState({\r\n      errorValid: { email: validate },\r\n      errors: { email: errors.email },\r\n    });\r\n  };\r\n\r\n  handlePasswordInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      hidePassword: true,\r\n      password: event.target.value,\r\n      icEye: 'visibility-off',\r\n    });\r\n    let errors = this.state.errors;\r\n    let validate = false;\r\n    const regexvalidatePassword = new RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/);\r\n    if (!regexvalidatePassword.test(event.target.value)) {\r\n      errors.password =\r\n        \"Password is not valid\";\r\n      validate = true;\r\n    } else {\r\n      errors.password = \"\";\r\n    }\r\n    this.setState({\r\n      errorValid: { password: validate },\r\n      errors: { password: errors.password },\r\n    });\r\n  };\r\n  \r\n  \r\n  handleReapetPasswordInput = (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      hidePassword: true,\r\n      Rpassword: event.target.value,\r\n      icEye: 'visibility-off',\r\n    });\r\n    let errors = this.state.errors;\r\n    let validate = false;\r\n    if (this.state.password !== this.state.Rpassword) {\r\n\r\n      errors.Rpassword =\r\n        \"\";\r\n      validate = true;\r\n\r\n    } else if (this.state.password === this.state.Rpassword) {\r\n      errors.Rpassword = true;\r\n    }\r\n    this.setState({\r\n\r\n      errorValid: { Rpassword: validate },\r\n      errors: { Rpassword: errors.Rpassword },\r\n    });\r\n   \r\n  };\r\n\r\n  handleSubmit = () => {\r\n\r\n    if (\r\n      this.state.email === \"\" &&\r\n      this.state.password === \"\" &&\r\n      this.state.firstName === \"\" &&\r\n      this.state.lastName === \"\" &&\r\n      this.state.Rpassword === \"\"\r\n    ) {\r\n      this.setState({\r\n        errorValid: {\r\n          email: true,\r\n          password: true,\r\n          firstName: true,\r\n          lastName: true,\r\n          Rpassword: true\r\n        },\r\n        errors: {\r\n          email: \"email field shoul not be empty\",\r\n          password: \"password field should not be empty\",\r\n          firstName: \"firstname field should not be empty\",\r\n          lastName: \"lastname field should not be empty\",\r\n          Rpassword: \"password field should not be empty\"\r\n        },\r\n      });\r\n      return false;\r\n    }\r\n\r\n   }   \r\n  handleSubmit2 =(event) =>{\r\n    event.preventDefault();\r\n    const err = this.handleSubmit();\r\n    if(!err){\r\n    console.log(\"Line no 155\")\r\n     let userData = {\r\n      cartId: \"\",\r\n      email: this.state.email,\r\n      firstName: this.state.firstName,\r\n      lastName: this.state.lastName,\r\n      password: this.state.password,\r\n      service: \"advance\"\r\n\r\n    }\r\n    console.log(userData)\r\n    registration (userData).then((data)=>{\r\n      console.log(data);\r\n    })\r\n    .catch ((error)=>{\r\n      console.log(error)\r\n    })\r\n  }  \r\n    \r\n  }\r\n\r\n  \r\nrender() {\r\n    return (\r\n      <div className=\"main\" >\r\n         <div className=\"left-container\">\r\n          <div className=\"title\">\r\n                 <Typography component=\"h1\" variant=\"h5\" className=\"fundooShift\">\r\n                     <span style={{ color: \"#0606f8\"}}><b>F</b></span>\r\n                     <span style={{ color: \"#d10303\" }}><b>u</b></span>\r\n                     <span style={{ color: \"#f0b000\" }}><b>n</b></span>\r\n                     <span style={{ color: \"#0606f8\" }}><b>d</b></span>\r\n                     <span style={{ color: \"green\" }}><b>o</b></span>\r\n                    <span style={{ color: \"#d10303\" }}><b>o</b></span>\r\n                </Typography>\r\n         </div>\r\n         <div className=\"header\"><h1> Create your Fundoo Account</h1></div>\r\n\r\n         <div className={useStyles.root} noValidate autoComplete=\"off\">\r\n             <div className=\"parent\">\r\n                 <div className=\"name\">\r\n                    <TextField \r\n                     size=\"small\"  \r\n                      id=\"outlined-basic\"\r\n                      label=\"First Name\" \r\n                      variant=\"outlined\" \r\n                       name = \"firstName\"\r\n                       required\r\n                       value={this.state.firstName}\r\n                      error={this.state.errorValid.firstName}\r\n                      onChange={this.handleFirstNameInput}\r\n                      helperText={this.state.errors[\"firstName\"]}\r\n                         />\r\n                  </div> \r\n                 <div className=\"laname\">\r\n                    <TextField size=\"small\"  \r\n                    id=\"outlined-basic\" \r\n                    label=\"Last Name\" \r\n                    variant=\"outlined\" \r\n                    name = \"lastName\" \r\n                    value={this.state.lastName}\r\n                    error={this.state.errorValid.lastName}\r\n                   onChange={this.handleLastNameInput}\r\n                   helperText={this.state.errors[\"lastName\"]}\r\n                      />\r\n                 </div>\r\n                \r\n             </div>\r\n            <div className=\"email\">\r\n                  <TextField size=\"small\"  \r\n                  id=\"outlined-basic\" \r\n                  style ={{width: '129%'}} \r\n                  label=\"Username\" \r\n                  variant=\"outlined\" \r\n                  width=\"500px\" \r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    error={this.state.errorValid.email}\r\n                    onChange={this.handleEmailInput}\r\n                     helperText= {this.state.errors[\"email\"]}\r\n                     />\r\n                  <p><span   class=\"spanid\">You can use letters, numbers and symbols</span></p>\r\n            </div>\r\n            <div className=\"emp\"> \r\n               <div className=\"name\">       \r\n                <TextField  size=\"small\"  \r\n                id=\"outlined-basic\" \r\n                label=\"password\" \r\n                variant=\"outlined\"  \r\n                 name=\"password\"\r\n                 autoComplete=\"current-password\"\r\n                 value={this.state.password}\r\n                error={this.state.errorValid.password}\r\n                onChange={this.handlePasswordInput}\r\n                helperText={this.state.errors[\"password\"]}\r\n                type={this.state.showPassword ? 'text' : 'password'}\r\n                 />\r\n                </div> \r\n                 <TextField size=\"small\" \r\n                 id=\"outlined-basic\" \r\n                 label=\"confirm\" \r\n                 variant=\"outlined\"\r\n                 name=\"rpassword\"\r\n                 error={this.state.errorValid.Rpassword}\r\n                onChange={this.handleReapetPasswordInput}\r\n               helperText={this.state.errors[\"Rpassword\"]}\r\n               type=\"text\"\r\n              // type={this.state.showPassword ? 'text' : 'password'}\r\n                  />     \r\n            </div>\r\n          <div>\r\n             <p><span class=\"spanid\">Use 8 or more characters with a mix of letters, numbers & symbols</span></p>\r\n          </div>\r\n          <div className=\"chkbox\">\r\n          <Checkbox\r\n            defaultChecked\r\n           color=\"primary\"\r\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n         />\r\n          <p>show password</p>\r\n          </div>\r\n              <Button className=\"button1\" \r\n              variant=\"contained\" \r\n              color=\"primary\"\r\n              onClick={this.handleSubmit2}\r\n              >  Next </Button>\r\n              <Button className=\"button2\" color=\"primary\">Sign in instead</Button>\r\n        </div>\r\n      </div>\r\n\r\n         <div className=\"right-container\">\r\n            <img src={logo} style={{ height: 256 }} alt=\"Signup logo\" />\r\n            \r\n           <p> One account. All of Google  working <br/> for you.</p> \r\n         </div>\r\n    </div>\r\n     \r\n      \r\n    \r\n    ) ;   \r\n}\r\n\r\n}\r\n\r\n","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\LoginPage\\login.jsx",["38","39","40","41"],"import React  from 'react';\r\nimport '../LoginPage/login.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Card } from '@material-ui/core';\r\nimport { login } from \"../../Services/userService\"\r\n\r\n\r\n\r\nexport default class LoginForm extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      emailError: \"\",\r\n      emailFlag: false,\r\n      passwordError: \"\",\r\n      passwordFlag: false,\r\n      \r\n    };\r\n  }\r\n\r\n  change = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    let isError = false;\r\n    const errors = {\r\n      emailError: \"\",\r\n      emailFlag: false,\r\n      passwordError: \"\",\r\n      passwordFlag: false,\r\n    };\r\n\r\n    if (this.state.email.length == 0) {\r\n      errors.emailFlag = true;\r\n      isError = true;\r\n      errors.emailError = \"Enter your Email \";\r\n    }\r\n    if (!/[a-zA-Z0-9._]+[@]{1}[a-zA-Z120-9]*[.]{1}[a-zA-Z]*$/.test(this.state.email)) {\r\n      errors.emailFlag = true;\r\n      isError = true;\r\n      errors.emailError = \"Please Enter Correct Email\";\r\n    }\r\n    if (this.state.password.length == 0) {\r\n      errors.passwordFlag = true;\r\n      isError = true;\r\n      errors.passwordError = \"Enter Password\";\r\n    }\r\n\r\n    this.setState({\r\n      ...errors,\r\n    });\r\n\r\n    return isError;\r\n  };\r\n \r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const err = this.validate();\r\n    if (!err) {\r\n      this.setState({\r\n        email: \"\",\r\n        emailFlag: false,\r\n        emailError: \"\",\r\n        password: \"\",\r\n        passwordFlag: false,\r\n        passwordError: \"\",\r\n      });\r\n      \r\n      let loginData = {\r\n        \r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        \r\n      };\r\n\r\n      console.log(loginData)\r\n      login (loginData).then((data)=>{\r\n        console.log(data);\r\n      })\r\n      .catch ((error)=>{\r\n        console.log(error)\r\n      })\r\n     \r\n    }\r\n  };\r\n\r\n  render(){\r\n      return(\r\n        <div className=\"wrapper-tool\">\r\n        <Card id='form'>\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className=\"paper\">\r\n              <br>\r\n              </br>\r\n              <Typography component=\"h1\" variant=\"h5\" className=\"fundooShift\">\r\n              <span style={{ color: \"#0606f8\"}}>F</span>\r\n              <span style={{ color: \"#d10303\" }}>u</span>\r\n              <span style={{ color: \"#f0b000\" }}>n</span>\r\n              <span style={{ color: \"#0606f8\" }}>d</span>\r\n              <span style={{ color: \"green\" }}>o</span>\r\n              <span style={{ color: \"#d10303\" }}>o</span>\r\n              </Typography>\r\n              <Typography component=\"h1\" variant=\"h5\" className=\"head\">\r\n              <span style={{ color:\"black\"}}>Sign In Your Fundoo Account</span>\r\n              </Typography>\r\n              <form className=\"form\">\r\n                <Grid>\r\n\r\n                  <Grid>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Enter Email Address :\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      value={this.state.email}\r\n                      helperText={this.state.emailError}\r\n                      error={this.state.emailFlag}\r\n                      onChange={(e) => this.change(e)}\r\n                     \r\n                    />\r\n                  </Grid>\r\n                  <br>\r\n                  </br>\r\n                  <Grid>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"password\"\r\n                      label=\"Enter Password :\"\r\n                      name=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      value={this.state.password}\r\n                      onChange={(e) => this.change(e)}\r\n                      error={this.state.passwordFlag}\r\n                      helperText={this.state.passwordError}\r\n                      />\r\n                  </Grid>\r\n                </Grid >\r\n                <br>\r\n                </br>\r\n                <Grid>\r\n                  <Grid>\r\n                    <Button className=\"signin\"\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={this.onSubmit}\r\n                      >\r\n                      Sign In\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <br>\r\n                </br>\r\n                <br>\r\n                </br>\r\n                <br>\r\n                </br>\r\n                <br>\r\n                </br>\r\n                <Grid className=\"extra-tool\"  >\r\n                  <Grid container justify=\"flex-start\">\r\n\r\n                    <Grid item >\r\n\r\n                      <Link  color=\"textPrimary\" >\r\n                         <font color=\"blue\"><u>Create account</u></font>\r\n                      </Link>\r\n\r\n\r\n                    </Grid >\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"flex-end\" justify style={{ marginTop: 8, marginBottom: 10 }} className=\"link\" style={{ padding: -1 }}>\r\n                  <Link  href=\"http://localhost:3000/forgotPassword\"\r\n                  color=\"textPrimary\" >\r\n                      <font color=\"blue\"><u>Forget password?</u></font>\r\n                  </Link>\r\n                </Grid>\r\n                \r\n                \r\n              </form>\r\n            </div>\r\n          </Container>\r\n        </Card >\r\n      </div>\r\n      );\r\n  }\r\n\r\n}","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Services\\userService.js",["42"],"import axios from \"axios\";\r\nimport React from \"react\";\r\n// import { Component } from \"react\";\r\n// const baseUrl = \"http://fundoonotes.incubation.bridgelabz.com/api/user\";\r\n\r\nexport function registration(data) {\r\n    try {\r\n        console.log(\"This is the Sign up part\", data);\r\n        let data1 = axios.post(`http://fundoonotes.incubation.bridgelabz.com/api/user/userSignUp`, data);\r\n        return data1;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n\r\n};\r\nexport function login(data) {\r\n\r\n    try {\r\n        console.log(\"This is the Sign in part\", data);\r\n        let data3 = axios.post(`http://fundoonotes.incubation.bridgelabz.com/api/user/login`, data);\r\n        return data3;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n\r\n};","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\Forgot-Password\\forgotPassword.jsx",["43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":100,"column":50,"nodeType":"51","messageId":"52","endLine":100,"endColumn":51,"suggestions":"53"},{"ruleId":"49","severity":1,"message":"50","line":100,"column":66,"nodeType":"51","messageId":"52","endLine":100,"endColumn":67,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":45,"column":33,"nodeType":"57","messageId":"58","endLine":45,"endColumn":35},{"ruleId":"55","severity":1,"message":"56","line":55,"column":36,"nodeType":"57","messageId":"58","endLine":55,"endColumn":38},{"ruleId":"59","severity":1,"message":"60","line":191,"column":52,"nodeType":"61","endLine":191,"endColumn":59},{"ruleId":"59","severity":1,"message":"60","line":191,"column":120,"nodeType":"61","endLine":191,"endColumn":143},{"ruleId":"62","severity":1,"message":"63","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":37,"column":54,"nodeType":"51","messageId":"52","endLine":37,"endColumn":55,"suggestions":"66"},{"ruleId":"49","severity":1,"message":"50","line":37,"column":70,"nodeType":"51","messageId":"52","endLine":37,"endColumn":71,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["70","71"],["72","73"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar",["74","75"],["76","77"],"no-global-assign","no-unsafe-negation",{"messageId":"78","fix":"79","desc":"80"},{"messageId":"81","fix":"82","desc":"83"},{"messageId":"78","fix":"84","desc":"80"},{"messageId":"81","fix":"85","desc":"83"},{"messageId":"78","fix":"86","desc":"80"},{"messageId":"81","fix":"87","desc":"83"},{"messageId":"78","fix":"88","desc":"80"},{"messageId":"81","fix":"89","desc":"83"},"removeEscape",{"range":"90","text":"91"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"92","text":"93"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"94","text":"91"},{"range":"95","text":"93"},{"range":"96","text":"91"},{"range":"97","text":"93"},{"range":"98","text":"91"},{"range":"99","text":"93"},[2758,2759],"",[2758,2758],"\\",[2774,2775],[2774,2774],[1162,1163],[1162,1162],[1178,1179],[1178,1178]]