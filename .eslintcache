[{"C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\index.js":"1","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\App.js":"2","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\reportWebVitals.js":"3","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\RegistrationPage\\register.jsx":"4","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\LoginPage\\login.jsx":"5","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Services\\userService.js":"6","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\Forgot-Password\\forgotPassword.jsx":"7","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Services\\axiosService.js":"8","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\Reset-password\\resetPassword.jsx":"9","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\Dashboard\\Dashboard.jsx":"10"},{"size":504,"mtime":1611026083703,"results":"11","hashOfConfig":"12"},{"size":895,"mtime":1611763035388,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":10995,"mtime":1611828885918,"results":"15","hashOfConfig":"12"},{"size":6307,"mtime":1611753218023,"results":"16","hashOfConfig":"12"},{"size":1676,"mtime":1611763031024,"results":"17","hashOfConfig":"12"},{"size":4983,"mtime":1611651979305,"results":"18","hashOfConfig":"12"},{"size":189,"mtime":1611556480492,"results":"19","hashOfConfig":"12"},{"size":7160,"mtime":1611842597614,"results":"20","hashOfConfig":"12"},{"size":6849,"mtime":1611739067926,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"jw120l",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\index.js",[],["46","47"],"C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\App.js",[],"C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\reportWebVitals.js",[],"C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\RegistrationPage\\register.jsx",["48","49"],"C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\LoginPage\\login.jsx",["50","51","52","53"],"import React  from 'react';\r\nimport '../LoginPage/login.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Card } from '@material-ui/core';\r\nimport UserService from '../../Services/userService'\r\n\r\nconst userServices = new UserService()\r\n\r\n\r\n\r\nexport default class LoginForm extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      emailError: \"\",\r\n      emailFlag: false,\r\n      passwordError: \"\",\r\n      passwordFlag: false,\r\n      \r\n    };\r\n  }\r\n\r\n  change = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  validate = () => {\r\n    let isError = false;\r\n    const errors = {\r\n      emailError: \"\",\r\n      emailFlag: false,\r\n      passwordError: \"\",\r\n      passwordFlag: false,\r\n    };\r\n\r\n    if (this.state.email.length == 0) {\r\n      errors.emailFlag = true;\r\n      isError = true;\r\n      errors.emailError = \"Enter your Email \";\r\n    }\r\n    if (!/[a-zA-Z0-9._]+[@]{1}[a-zA-Z120-9]*[.]{1}[a-zA-Z]*$/.test(this.state.email)) {\r\n      errors.emailFlag = true;\r\n      isError = true;\r\n      errors.emailError = \"Please Enter Correct Email\";\r\n    }\r\n    if (this.state.password.length == 0) {\r\n      errors.passwordFlag = true;\r\n      isError = true;\r\n      errors.passwordError = \"Enter Password\";\r\n    }\r\n\r\n    this.setState({\r\n      ...errors,\r\n    });\r\n\r\n    return isError;\r\n  };\r\n \r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const err = this.validate();\r\n    if (!err) {\r\n      this.setState({\r\n        email: \"\",\r\n        emailFlag: false,\r\n        emailError: \"\",\r\n        password: \"\",\r\n        passwordFlag: false,\r\n        passwordError: \"\",\r\n      });\r\n      \r\n      let loginData = {\r\n        \r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        \r\n      };\r\n\r\n      console.log(loginData)\r\n      userServices.login(loginData).then((data)=>{\r\n        console.log(data);\r\n      })\r\n      .catch ((error)=>{\r\n        console.log(error)\r\n      })\r\n     \r\n    }\r\n  };\r\n\r\n  render(){\r\n      return(\r\n        <div className=\"wrapper-tool\">\r\n        <Card id='form'>\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className=\"paper\">\r\n              <br>\r\n              </br>\r\n              <Typography component=\"h1\" variant=\"h5\" className=\"fundooShift\">\r\n              <span style={{ color: \"#0606f8\"}}>F</span>\r\n              <span style={{ color: \"#d10303\" }}>u</span>\r\n              <span style={{ color: \"#f0b000\" }}>n</span>\r\n              <span style={{ color: \"#0606f8\" }}>d</span>\r\n              <span style={{ color: \"green\" }}>o</span>\r\n              <span style={{ color: \"#d10303\" }}>o</span>\r\n              </Typography>\r\n              <Typography component=\"h1\" variant=\"h5\" className=\"head\">\r\n              <span style={{ color:\"black\"}}>Sign In Your Fundoo Account</span>\r\n              </Typography>\r\n              <form className=\"form\">\r\n                <Grid>\r\n\r\n                  <Grid>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Enter Email Address :\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      value={this.state.email}\r\n                      helperText={this.state.emailError}\r\n                      error={this.state.emailFlag}\r\n                      onChange={(e) => this.change(e)}\r\n                     \r\n                    />\r\n                  </Grid>\r\n                  <br>\r\n                  </br>\r\n                  <Grid>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"password\"\r\n                      label=\"Enter Password :\"\r\n                      name=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      value={this.state.password}\r\n                      onChange={(e) => this.change(e)}\r\n                      error={this.state.passwordFlag}\r\n                      helperText={this.state.passwordError}\r\n                      />\r\n                  </Grid>\r\n                </Grid >\r\n                <br>\r\n                </br>\r\n                <Grid>\r\n                  <Grid>\r\n                    <Button className=\"signin\"\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={this.onSubmit}\r\n                      >\r\n                      Sign In\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <br>\r\n                </br>\r\n                <br>\r\n                </br>\r\n                <br>\r\n                </br>\r\n                <br>\r\n                </br>\r\n                \r\n                <Grid className=\"extra-tool\"  >\r\n                  <Grid container justify=\"flex-start\">\r\n                    <Grid item >\r\n                      <Link  color=\"textPrimary\" \r\n                          href=\"http://localhost:3000/register\" >\r\n                         <font color=\"blue\"><u>Create account</u></font>\r\n                      </Link>\r\n                    </Grid >\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"flex-end\" justify style={{ marginTop: 8, marginBottom: 10 }} className=\"link\" style={{ padding: -1 }}>\r\n                  <Link  href=\"http://localhost:3000/forgot\"\r\n                  color=\"textPrimary\" >\r\n                      <font color=\"blue\"><u>Forget password?</u></font>\r\n                  </Link>\r\n                </Grid>\r\n                \r\n                \r\n              </form>\r\n            </div>\r\n          </Container>\r\n        </Card >\r\n      </div>\r\n      );\r\n  }\r\n\r\n}","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Services\\userService.js",[],"C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\Forgot-Password\\forgotPassword.jsx",["54","55"],"import React, { Component } from \"react\"\r\n import \"./forgotPassword.css\"\r\nimport { Card } from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport UserService from '../../Services/userService'\r\n\r\nconst userServices = new UserService()\r\n\r\nclass ForgotPassword extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          email: \"\",\r\n         \r\n          errorValid: {\r\n            email: false,\r\n          },\r\n          enable: true,\r\n          service: \"advance\",\r\n          errors: {\r\n            email: \"\",\r\n          },\r\n        };\r\n      }\r\n\r\n      handleEmailInput = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n          email: event.target.value,\r\n        });\r\n        let errors = this.state.errors;\r\n        let validate = false;\r\n        const regexValidateEmail = new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$$/);\r\n        if (!regexValidateEmail.test(event.target.value)) {\r\n          errors.email = \"Email is not according to the syntx\";\r\n          validate = true;\r\n        } else {\r\n          errors.email = \"\";\r\n        }\r\n        this.setState({\r\n          errorValid: { email: validate },\r\n          errors: { email: errors.email },\r\n        });\r\n      };\r\n\r\n      handleSubmit2 = () =>{\r\n        if(this.state.email === \"\"){\r\n          this.setState({\r\n            errorValid: {\r\n              email: true,\r\n            },\r\n            errors: {\r\n              email: \"email field shoul not be empty\",\r\n            },\r\n          });\r\n          return false;\r\n        }\r\n      }\r\n      \r\n      handleSubmit =(event) =>{\r\n        event.preventDefault();\r\n        const err = this.handleSubmit2();\r\n       if(!err){\r\n        console.log(\"Line no 51\")\r\n         let forgotPassData = {\r\n          cartId: \"\",\r\n          email: this.state.email,\r\n          service: \"advance\"\r\n  \r\n        }\r\n        console.log(forgotPassData)\r\n        userServices.forgot(forgotPassData).then((data)=>{\r\n          console.log(data);\r\n        })\r\n        .catch ((error)=>{\r\n          console.log(error)\r\n        })\r\n          \r\n       }  \r\n      }\r\n\r\nrender(){\r\n    return(\r\n        <div className=\"wrapper-tool\">\r\n            <Card id='form'>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className=\"paper\">\r\n                <br>\r\n                </br>\r\n                <br>\r\n                </br>\r\n            <Typography component=\"h1\" variant=\"h5\" className=\"fundooShift\">\r\n              <span style={{ color: \"#0606f8\"}}>F</span>\r\n              <span style={{ color: \"#d10303\" }}>u</span>\r\n              <span style={{ color: \"#f0b000\" }}>n</span>\r\n              <span style={{ color: \"#0606f8\" }}>d</span>\r\n              <span style={{ color: \"green\" }}>o</span>\r\n              <span style={{ color: \"#d10303\" }}>o</span>\r\n              </Typography>\r\n              <Typography component=\"h1\" variant=\"h5\" className=\"head\">\r\n              <span>Find your email</span>\r\n              </Typography>\r\n              <Typography component=\"h1\" variant=\"h5\" className=\"head\">\r\n              <span><h6>Please Enter your recovery email address</h6></span>\r\n              </Typography>\r\n              <form className=\"form\">\r\n              <Grid>\r\n              <Grid>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"emailOrNumber\"\r\n                      label=\"Enter your email :\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      value={this.state.email}\r\n                      error={this.state.errorValid.email}\r\n                      onChange={this.handleEmailInput}\r\n                      helperText={this.state.errors[\"email\"]}\r\n                      \r\n                     \r\n                    />\r\n                  </Grid>\r\n                  \r\n              </Grid>\r\n              <br>\r\n              </br>\r\n              <Grid>\r\n                  <Grid>\r\n                  {/* href=\"http://localhost:3000/ResetPassword\"  */}\r\n                  <Link color=\"textPrimary\" >\r\n                  <Button \r\n                     variant=\"contained\" \r\n                     color=\"primary\"\r\n                     onClick={this.handleSubmit}>\r\n                      Reset password\r\n                  </Button>\r\n                  </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n\r\n            </div>\r\n            </Container>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\n}\r\nexport default ForgotPassword;","C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Services\\axiosService.js",[],"C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\Reset-password\\resetPassword.jsx",["56"],"C:\\Users\\lenovo\\OneDrive\\Desktop\\ReactJs\\fundoo\\src\\Components\\Dashboard\\Dashboard.jsx",["57","58","59","60","61","62"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport \"./Dashboard.css\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport icon from \"../../Images/keepIcon.png\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SettingsSharpIcon from \"@material-ui/icons/SettingsOutlined\";\r\nimport DnsRoundedIcon from \"@material-ui/icons/DnsRounded\";\r\nimport ReplayOutlinedIcon from \"@material-ui/icons/ReplayOutlined\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport AppsRoundedIcon from \"@material-ui/icons/AppsRounded\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\r\nimport EmojiObjectsOutlinedIcon from \"@material-ui/icons/EmojiObjectsOutlined\";\r\nimport AddAlertOutlinedIcon from \"@material-ui/icons/AddAlertOutlined\";\r\nimport SystemUpdateAltOutlinedIcon from \"@material-ui/icons/SystemUpdateAltOutlined\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\n\r\nconst drawerWidth = 240;\r\nvar checkOpen = \"close\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    backgroundColor: \"white\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    borderBottom: \"lightgray solid 1px\",\r\n    boxShadow: \"none\",\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: \"22%\",\r\n    borderRight: \"#ffff\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    borderRight: \"#ffff\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const drawerOpenClose = () => {\r\n    if (checkOpen === \"open\") {\r\n      setOpen(false);\r\n      checkOpen = \"close\";\r\n    } else if (checkOpen === \"close\") {\r\n      setOpen(true);\r\n      checkOpen = \"open\";\r\n    }\r\n    console.log(checkOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"root\" className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        color=\"transparent\"\r\n        position=\"fixed\"\r\n        className={classes.appBar}\r\n      >\r\n        <Toolbar className=\"topBar\">\r\n          <div className=\"startOptions\">\r\n            <div className=\"menuButton\">\r\n              <IconButton onClick={drawerOpenClose} edge=\"start\">\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"headerIcon\">\r\n              <img className=\"headerIcon\" src={icon} />\r\n            </div>\r\n            <div className=\"headerTitle\">Fundoo</div>\r\n          </div>\r\n\r\n          <div className=\"search\">\r\n            <div className=\"searchIcon\">\r\n              <div className=\"searchIcon\">\r\n                <SearchIcon />\r\n              </div>\r\n            </div>\r\n            <InputBase\r\n              className=\"searchInput\"\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: \"inputRoot\",\r\n                input: \"inputInput\",\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n          <div className=\"buttonContainer\">\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <ReplayOutlinedIcon />\r\n              </IconButton>\r\n            </div>\r\n\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <DnsRoundedIcon />\r\n              </IconButton>\r\n            </div>\r\n\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <SettingsSharpIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div class=\"appsContainer\">\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <AppsRoundedIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className=\"button\">\r\n              <IconButton aria-label=\"open drawer\">\r\n                <AccountCircleOutlinedIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={classes.drawerMain}\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className=\"drawerList\">\r\n          <List>\r\n            <div className=\"drawerButton\">\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <EmojiObjectsOutlinedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Notes\" />\r\n              </ListItem>\r\n            </div>\r\n\r\n            <div className=\"drawerButton\">\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <AddAlertOutlinedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Reminders\" />\r\n              </ListItem>\r\n            </div>\r\n\r\n            <div className=\"drawerButton\">\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <EditOutlinedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Edit Labels\" />\r\n              </ListItem>\r\n            </div>\r\n\r\n            <div className=\"drawerButton\">\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <SystemUpdateAltOutlinedIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Archive\" />\r\n              </ListItem>\r\n            </div>\r\n\r\n            <div className=\"drawerButton\">\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <DeleteOutlineIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"trash\" />\r\n              </ListItem>\r\n            </div>\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n\r\n    </div>\r\n  );\r\n}",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":103,"column":50,"nodeType":"69","messageId":"70","endLine":103,"endColumn":51,"suggestions":"71"},{"ruleId":"67","severity":1,"message":"68","line":103,"column":66,"nodeType":"69","messageId":"70","endLine":103,"endColumn":67,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":47,"column":33,"nodeType":"75","messageId":"76","endLine":47,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":57,"column":36,"nodeType":"75","messageId":"76","endLine":57,"endColumn":38},{"ruleId":"77","severity":1,"message":"78","line":191,"column":52,"nodeType":"79","endLine":191,"endColumn":59},{"ruleId":"77","severity":1,"message":"78","line":191,"column":120,"nodeType":"79","endLine":191,"endColumn":143},{"ruleId":"67","severity":1,"message":"68","line":39,"column":54,"nodeType":"69","messageId":"70","endLine":39,"endColumn":55,"suggestions":"80"},{"ruleId":"67","severity":1,"message":"68","line":39,"column":70,"nodeType":"69","messageId":"70","endLine":39,"endColumn":71,"suggestions":"81"},{"ruleId":"77","severity":1,"message":"78","line":205,"column":23,"nodeType":"79","endLine":205,"endColumn":76},{"ruleId":"82","severity":1,"message":"83","line":4,"column":22,"nodeType":"84","messageId":"85","endLine":4,"endColumn":30},{"ruleId":"82","severity":1,"message":"86","line":29,"column":7,"nodeType":"84","messageId":"85","endLine":29,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":77,"column":27,"nodeType":"79","endLine":77,"endColumn":51},{"ruleId":"77","severity":1,"message":"78","line":82,"column":9,"nodeType":"79","endLine":82,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":93,"column":15,"nodeType":"89","endLine":93,"endColumn":56},{"ruleId":"77","severity":1,"message":"78","line":151,"column":9,"nodeType":"79","endLine":154,"endColumn":12},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["92","93"],["94","95"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["96","97"],["98","99"],"no-unused-vars","'useTheme' is defined but never used.","Identifier","unusedVar","'drawerWidth' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"messageId":"100","fix":"101","desc":"102"},{"messageId":"103","fix":"104","desc":"105"},{"messageId":"100","fix":"106","desc":"102"},{"messageId":"103","fix":"107","desc":"105"},{"messageId":"100","fix":"108","desc":"102"},{"messageId":"103","fix":"109","desc":"105"},{"messageId":"100","fix":"110","desc":"102"},{"messageId":"103","fix":"111","desc":"105"},"removeEscape",{"range":"112","text":"113"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"114","text":"115"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"116","text":"113"},{"range":"117","text":"115"},{"range":"118","text":"113"},{"range":"119","text":"115"},{"range":"120","text":"113"},{"range":"121","text":"115"},[2797,2798],"",[2797,2797],"\\",[2813,2814],[2813,2813],[1197,1198],[1197,1197],[1213,1214],[1213,1213]]